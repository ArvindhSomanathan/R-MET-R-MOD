objects()
readTD3505_noaa
str(read_TD3505_noaa)
str(readTD3505_noaa)
gwinnett <- readTD3505_noaa(747808,63803, 2006,2010)
head(gwinnett)
windRose(gwinnett)
windRose(gwinnett, type="year")
history()
objects()
make_calms_less1
gwinnett <- make_calms_less1(gwinnett)
windRose(gwinnett)
objects()
str(writeTD3505)
writeTD3505_noaa(747808,63803, 2006,2010)
writeTD3505(747808,63803, 2006,2010)
seq(2006,2010, by=1)
seq(2006,2006, by=1)
writeTD3505(747808,63803, 2006,2010)
writeTD3505(747808,63803, 2006,2006)
source("writeTD6405.R")
source("writeTD3505.R")
source("writeAMInpfile.R")
source("runAerminute.R")
writeTD6405("KDAL", 2006,2010)
writeTD3505(722583,13960, 2006, 2010)
writeAMInpfile(ifg="n", start=2006, stop=2010)
runAerminute(2006,2010)
rm(list=ls())
source("writeTD6405.R")
source("writeTD3505.R")
source("writeAMInpfile.R")
source("runAerminute.R")
writeTD6405("KDAL", 2006,2010)
writeTD3505(722583,13960, 2006, 2010)
writeAMInpfile(ifg="n", start=2006, stop=2010)
runAerminute(2006,2010)
source("writeFSL.R")
source("writeFSL.R")
source("writeFSL.R")
source("writeFSL.R")
source("writeFSL.R")
writeFSL(72249, 2006, 2010)
writeFSL(72249, 2006, 2010)
source("writeFSL.R")
writeFSL(72249, 2006, 2010)
startYear=2006
stopYear=2010
WMO=72249
years <- seq(startYear, stopYear, by=1)
sdExist <- sapply(as.character(years), FUN=file.exists )
sapply(as.character(years[!sdExist]), FUN=dir.create, showWarnings=FALSE)
i =1
qForm <- postForm("http://www.esrl.noaa.gov/raobs/intl/GetRaobs.cgi",
shour = "All Times",
ltype = "All Levels",
wunits ="Knots",
bdate = paste(years[i], "010100", sep=""),
edate = paste(years[i], "123123", sep=""),
access ="WMO Station Identifier",
view="NO",
osort="Station Series Sort",
StationIDs = WMO,
oformat = "FSL format (ASCII text)",
SUBMIT = "Continue Data Access")
qForm
grep("\.\..*\\", qForm)
grep("\\.\\..*\\", qForm)
grep("\\.\\..*\\\", qForm)
\
)
grep("\\.\\..*", qForm)
grep("\\.\\..*", qForm, value=TRUE)
library(stringr)
str_extract_all
str_extract_all(qForm, "\.\.*")
str_extract_all(qForm, "\\.\\.*")
str_extract_all(qForm, "\\.\\..*")
str_extract_all(qForm, "\\.\\..*\\")
str_extract_all(qForm, "\\.\\..*\")
)
str_extract_all(qForm, "\\.\\..*\\\")
str_extract_all(qForm, "\\.\\..*tmp")
str_extract_all(qForm, "temp..*tmp")
source("writeFSL.R")
writeFSL(72249, 2006, 2010)
load("C:/Users/Hzd3/R-MET-R-MOD/20067224920062010.fsl")
tempFile <- paste("http://www.esrl.noaa.gov/raobs/", str_extract_all(qForm, "temp..*tmp"))
tempfile
tempFile
tempFile <- paste("http://www.esrl.noaa.gov/raobs/", str_extract_all(qForm, "temp..*tmp"), sep="")
tempFile
download.file(tempFile, paste("./", years[i], WMO, startYear, stopYear,".fsl", sep=""))
download.file(tempFile, paste("./", years[i],"/", WMO, startYear, stopYear,".fsl", sep=""))
years[i]
source("writeFSL.R")
writeFSL(72249, 2006, 2010)
# URMET 2nd Gig
#
#
#
# Attempt to improve performace of URMET
#
#
#
# Author: Jim Durant (hzd3@cdc.gov)
#
#
# first read the lines into a df
lines<-read.table(file=file.choose(), fill=TRUE)
datelines<- lines[lines$V1==254,]
# now this is INTERESTING... the rownames contain the row number that the
# new record starts at. Therefore, if I take the rownames and add 4 I can get the start and end
# of the profile....
startlines<-as.numeric(rownames(datelines))
endlines<-c(startlines,  dim(lines)[1])
endlines<-endlines[-1]
datelines$length<-(endlines-startlines-4)
repfunction=function(x){
times<-x[8]
x<-data.frame(x)
apply(x, MARGIN=2, FUN=rep, times)
}
dateline<-apply(datelines, MARGIN=1, FUN=repfunction)
dateline<-matrix(unlist(dateline), byrow=TRUE, ncol=8)
#add one extra line
dateline<-rbind(dateline, dateline[dim(dateline)[1],])
dateline<-data.frame(dateline)
pressurelines<-lines[lines$V1!=254 &lines$V1!=1 &lines$V1!=2 &lines$V1!=3,]
upperair<-cbind(dateline, pressurelines)
upperair$date<-strptime(paste(upperair$X5, upperair$X4, upperair$X3, upperair$X2), format="%Y %b %d %H")
names(upperair)<-c("X1", "Hour", "Day", "Month", "Year", "X6","X7", "X8", "LINTYP", "press", "alt", "temp", "dewpt", "dir", "wspd", "date")
upperair$press<-as.numeric(as.character(upperair$press))
upperair$alt<-as.numeric(as.character(upperair$alt))
upperair$temp<-as.numeric(as.character(upperair$temp))
upperair$dewpt<-as.numeric(as.character(upperair$dewpt))
is.na(upperair$press) <- upperair$press == 99999
is.na(upperair$temp) <- upperair$temp == 99999
is.na(upperair$dewpt) <- upperair$dewpt == 99999
is.na(upperair$dir) <- upperair$dir == 99999
is.na(upperair$wspd) <- upperair$wspd == 99999
is.na(upperair$alt) <- upperair$alt == 99999
# now to get into format for plotskew
upperair$press<-upperair$press/10
upperair$temp<-upperair$temp/10
upperair$dewpt<-upperair$dewpt/10
upperair$date<-as.POSIXct(upperair$date)
library(ggplot2)
file.choose()
writeFSL(72249, 2006, 2010)
# URMET 2nd Gig
#
#
#
# Attempt to improve performace of URMET
#
#
#
# Author: Jim Durant (hzd3@cdc.gov)
#
#
# first read the lines into a df
lines<-read.table(file=file.choose(), fill=TRUE)
datelines<- lines[lines$V1==254,]
# now this is INTERESTING... the rownames contain the row number that the
# new record starts at. Therefore, if I take the rownames and add 4 I can get the start and end
# of the profile....
startlines<-as.numeric(rownames(datelines))
endlines<-c(startlines,  dim(lines)[1])
endlines<-endlines[-1]
datelines$length<-(endlines-startlines-4)
repfunction=function(x){
times<-x[8]
x<-data.frame(x)
apply(x, MARGIN=2, FUN=rep, times)
}
dateline<-apply(datelines, MARGIN=1, FUN=repfunction)
dateline<-matrix(unlist(dateline), byrow=TRUE, ncol=8)
#add one extra line
dateline<-rbind(dateline, dateline[dim(dateline)[1],])
dateline<-data.frame(dateline)
pressurelines<-lines[lines$V1!=254 &lines$V1!=1 &lines$V1!=2 &lines$V1!=3,]
upperair<-cbind(dateline, pressurelines)
upperair$date<-strptime(paste(upperair$X5, upperair$X4, upperair$X3, upperair$X2), format="%Y %b %d %H")
names(upperair)<-c("X1", "Hour", "Day", "Month", "Year", "X6","X7", "X8", "LINTYP", "press", "alt", "temp", "dewpt", "dir", "wspd", "date")
upperair$press<-as.numeric(as.character(upperair$press))
upperair$alt<-as.numeric(as.character(upperair$alt))
upperair$temp<-as.numeric(as.character(upperair$temp))
upperair$dewpt<-as.numeric(as.character(upperair$dewpt))
is.na(upperair$press) <- upperair$press == 99999
is.na(upperair$temp) <- upperair$temp == 99999
is.na(upperair$dewpt) <- upperair$dewpt == 99999
is.na(upperair$dir) <- upperair$dir == 99999
is.na(upperair$wspd) <- upperair$wspd == 99999
is.na(upperair$alt) <- upperair$alt == 99999
# now to get into format for plotskew
upperair$press<-upperair$press/10
upperair$temp<-upperair$temp/10
upperair$dewpt<-upperair$dewpt/10
upperair$date<-as.POSIXct(upperair$date)
library(ggplot2)
ggplot(upperair, aes(x=press, y=temp, group=as.factor(date)))+geom_smooth(alpha=1/10)+coord_flip()+scale_x_reverse()
g<-ggplot(upperair[!is.na(upperair$temp),], aes(x=press, y=temp, group=as.factor(date)))+geom_line()+coord_flip()+scale_x_reverse() +facet_wrap(~Hour, nrow=2)
g
library(openair)
newupper<-cutData(upperair, type="season")
#morning soundings by season
g<-ggplot(newupper[!is.na(newupper$temp)& as.numeric(as.character(newupper$Hour))==0,], aes(x=press, y=temp, group=as.factor(date)))+geom_line(alpha=1/10)+coord_flip()+scale_x_reverse() +facet_wrap(~season, nrow=2)
g
